services:
  web:
    container_name: kritika_server
    volumes:
      - .:/kritika_server
      - static_volume:/home/app/webapp/static
      - media_volume:/home/app/webapp/mediafiles
    depends_on:
      - db
    build: .
    command: sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py initadmin &&
      gunicorn kritika.wsgi:application --bind 0.0.0.0:8000"
    image: kritika_image
    expose:
      - 8000
    networks:
      - server_net
  nginx:
    container_name: chirrio_nginx
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/home/app/webapp/static
      - media_volume:/home/app/webapp/mediafiles/icons
      - user_media_volume:/home/app/webapp/mediafiles/user_generated
      - /etc/letsencrypt/ssl/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/ssl/privkey.pem:/etc/nginx/ssl/privkey.pem
    depends_on:
      - web
    restart: "on-failure"
    networks:
      - server_net
  db:
    container_name: kritika_db
    image: postgres:14.5-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - PGPORT=${DATABASE_PORT}
      - POSTGRES_USER=${DATABASE_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - ${DATABASE_PORT}
    networks:
      - server_net

volumes:
  pgdata:
  static_volume:
  user_media_volume:
  media_volume:

networks:
  server_net: